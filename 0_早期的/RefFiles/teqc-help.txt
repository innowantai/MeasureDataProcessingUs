Usage: teqc [opts] file1 [file2 [...]]
   or: teqc [opts] < stdin
where [opts]:
	-ver[sion] or +ver[sion]dump program version and build to stderr
	-id or +id           dump program id to stderr
	-help or +help       dump the entire on-line help to stderr
	+relax               allow relaxed requirements on RINEX header fields
	-relax               strict requirements on RINEX header fields (default)
	+reformat            allow reading of misformatted RINEX data fields
	-reformat            strict requirements on RINEX data fields (default)
	+err name            write stderr directly to file 'name'
	++err name           append stderr directly to file 'name'
	+out name            write stdout directly to file 'name'
	++out name           append stdout directly to file 'name'
	-config name         read file(s) 'name' as configuration file(s)
	+config              dump all set parameters as a configuration to stdout
	++config             dump all known parameters as a superset configuration to stdout
	+bcf                 dump all known parameters as a BINEX configuration format to stdout
	++igs                dump all IGS receiver/antenna/dome designations to stdout
	++sym                dump all qc ASCII timeplot symbols to stdout
	-max_rx_ch[annels] # set maximum # of receiver channels based on receiver type
                               (default = 12 unless found by matching with IGS designation)
	-max_rx_SVs #        set maximum # of SVs trackable (per OBS epoch) based on receiver type
                               (default = 12 unless found by matching with IGS designation)
	-n_GPS #             set maximum expected GPS SV PRN, 0 < # <= 64 (default = 32)
	-n_GLONASS #         set maximum expected GLONASS SV slot #, 0 < # <= 64 (default = 24)
	-n_SBAS #            set maximum expected SBAS SV PRN - 119 = #, 0 < # <= 64 (default = 19)
	-n_Galileo #         set maximum expected Galileo SV PRN, 0 < # <= 64 (default = 53)
	-n_Compass #         set maximum expected Compass SV PRN, 0 < # <= 64 (default = 35)
	-n_QZSS #            set maximum expected QZSS SV PRN - 192 = #, 0 < # <= 64 (default = 10)
	+igs                 check rx and ant designations with IGS list (default)
	-igs                 don't check rx and ant designations with IGS list
	+ch                  use all channels (default)
	-ch#                 don't use channel # (max # of 64)
	+NaN_obs             use all OBS data (default)
	-NaN_obs #           don't use SV w/ NaN data in obs list # (max # of 64)
	+G                   use all GPS SVs (default)
	-G                   don't use any GPS SVs
	+G<list>             use only GPS SV PRN #s in <list>, e.g. 1,3,5-7,11
	-G<list>             don't use GPS SV PRN #s in <list>, e.g. 1,3,5-7,11
	+R                   use all GLONASS SVs (default)
	-R                   don't use any GLONASS SVs
	+R<list>             use only GLONASS SV slot #s in <list>, e.g. 1,3,5-7,11
	-R<list>             don't use GLONASS SV slot #s in <list>, e.g. 1,3,5-7,11
	+S                   use all SBAS SVs (default)
	-S                   don't use any SBAS SVs
	+S<list>             use only SBAS SV PRN (#-100) in <list>, e.g. 19,21-23
	-S<list>             don't use SBAS SV PRN (#-100) in <list>, e.g. 19,21-23
	+E                   use all Galileo SVs (default)
	-E                   don't use any Galileo SVs
	+E<list>             use only Galileo SV PRN #s in <list>, e.g. 1,3,5-7,11
	-E<list>             don't use Galileo SV PRN #s in <list>, e.g. 1,3,5-7,11
	+C                   use all Compass SVs (default)
	-C                   don't use any Compass SVs
	+C<list>             use only Compass SV PRN #s in <list>, e.g. 1,3,5-7,11
	-C<list>             don't use Compass SV PRN #s in <list>, e.g. 1,3,5-7,11
	+J                   use all QZSS SVs (default)
	-J                   don't use any QZSS SVs
	+J<list>             use only QZSS SV PRN #s in <list>, e.g. 1,3,5-7
	-J<list>             don't use QZSS SV PRN #s in <list>, e.g. 1,3,5-7
	-glonass_s2fcn str   str = filename of GLONASS SV slot and corresponding frequency channel number pairs
	+sv_dup[licates]     allow duplicate SVs in RINEX output
	-sv_dup[licates]     remove duplicate SVs before RINEX output (default)
	+sv_reset            (JPS/TPS only) reset SV list to zero upon format corruption until SV list is reestablished (default)
	-sv_reset            no reset of SV list upon format corruption
	+svo                 order SVs by PRN or slot #
	-svo                 SV detection ordering (default)
	-st[art_window] str  set windowing start time to str == [[[[[[YY]YY]MM]DD]hh]mm]ss[.sssss]
	+dX #                delta X time of # from windowing start time; X == Y, M, d, h, m, s for year,...,second
	-dX #                delta X time of # from windowing end time; X == Y, M, d, h, m, s for year,...,second
	-e[nd_window] str    set windowing end time to str == [[[[[[YY]YY]MM]DD]hh]mm]ss[.sssss]
	-hole name           read file 'name' to establish list of window holes
	-ns str              set next windowing start time to str == [[hh]mm]ss[.sssss]
	-ne str              set next windowing end time to str == [[hh]mm]ss[.sssss]
	-tbin # str          time binned output with # time-delta (# = <N>[d|h|m|s]) and filename prefix 'str'
	-ast str             set aligned time binned start time to str == [[[[[[YY]YY]MM]DD]hh]mm]ss[.sssss]
	                      ... or str = - or _ to start alignment with the first observation epoch
	+win_mo[nument] #    window filter on monument/marker name string #, maximal match
	-win_mo[nument] #    window filter on monument/marker name string #, minimal match
	+win_mn #            window filter on monument/marker number string #, maximal match
	-win_mn #            window filter on monument/marker number string #, minimal match
	+xdr                 attempt to use NMEA XDR strings as met data (default)
	-xdr                 do not attempt to use NMEA XDR strings as met data
	-delim#              change delimiter to # for seperating file names (default = ,)
	+obs[file(s)] name   output any OBS records in native format to RINEX filename 'name'
	+nav[file(s)] list   output any NAV records in native format to RINEX filename 'list'
	                     where 'list' == system filename(s) ordered GPS[,GLONASS[,SBAS[,Galileo[,-,QZSS]]]]
	                     (or use - or _ to omit a specific system)
	+met[file(s)] name   output any MET records in native format to RINEX filename 'name'
	+eds                 output external data strings to stderr
	-eds                 don't output external data strings (default)
	+event[s_out]        output event info with observations in RINEX obs
	-event[s_out]        don't output event info with observations (default)
	+dump_i[on]          dump all ionosphere model parameters to stderr
	-dump_i[on]          don't dump ionosphere model parameters to stderr (default)
	+dump_u[tc]          dump all UTC model parameters to stderr
	-dump_u[tc]          don't dump UTC model parameters to stderr (default)
	+diag                dump parsing and other diagnostics to stderr
	-diag                don't dump parsing and other diagnostics to stderr (default)
	+doy                 format certain dates such as metadata in year day-of-year
	-doy                 dates formatted in year month day (default)
	+smtt                smooth time tag (ms jumps in phase and range) (default)
	-smtt                ms jumps in time tag (smooth phase and range)
	-aoa code            input is from AOA (JPL) receiver, record type 'code':
	                       code = cb for ConanBinary survey data from TurboRogue or TurboStar rxs
	                       code = tb for TurboBinary survey data from TurboRogue or TurboStar rxs
	                       code = tbY for TurboBinary survey data from Benchmark ACT rx ('Y-codeless')
	-ash[tech] code      input is from Ashtech receiver, record type 'code':
	                       code = d for B-file survey data
	                       code = s for streamed (MBEN/DBEN) data
	                       code = r for R-file format data
	                       code = u for U-file format data
	-cmc code            input is from Canadian Marconi (CMC) receiver, record type 'code':
	                       code = b for CMC binary
	-jav[ad] code        input is from Javad receiver, record type 'code':
	                       code = jps for Javad JPS
	-lei[ca] code        input is from Leica receiver, record type 'code':
	                       code = ds for Leica DS format
	                       code = lb2 for Leica LB2 format
	                       code = mdb for Leica MDB format
	-mot[orola] code     input is from Motorola receiver, record type 'code':
	                       code = oncore for Oncore binary
	-nct code            input is from NavCom Technologies receiver, record type 'code':
	                       code = b for NavCom binary
	-roc[kwell] code     input is from Rockwell receiver, record type 'code':
	                       code = z for Zodiac format
	-sep[tentrio] code   input is from Septentrio receiver, record type 'code':
	                       code = sbf for Septentrio Binary Format
	-top[con] code       input is from Topcon receiver, record type 'code':
	                       code = tps for Topcon TPS
	-tr[imble] code      input is from Trimble receiver, record type 'code':
	                       code = d for .dat survey data
	                       code = s for big-endian streamed data
	-ti code             input is from Texas Instruments receiver, record type 'code':
	                       code = gesar for TI-4100 GESAR & BEPP/CORE format survey data
	                       code = rom for TI-4100 TI-ROM format survey data
	-ubl[ox] code        input is from u-blox AG receiver, record type 'code':
	                       code = ubx for u-blox UBX binary
	-binex               input is BINEX format
	+binex <rec_types>   output to be BINEX; <rec_types> = - for default record types
	-rtigs               input is IGS RTWG (RTIGS) format
	-soc                 input is JPL Soc format
	-argo                input is ARGO format
	-P[codes]            P-codeless (L2-squaring) or C/A-L1-only receiver
	+P[codes]            normal dual-frequency receiver (including L2C-capable) (default)
	+C2                  L2C code pseudorange to be included in default observables (i.e. no use of -O.obs[_types])
                             (note: see also 3 Aug 2009 entry for L2C in http://facility.unavco.org/software/teqc/log.html)
	-C2                  L2C code pseudorange not to be included in default observables (default)
                             (note: see also 3 Aug 2009 entry for L2C in http://facility.unavco.org/software/teqc/log.html)
	+L2                  expect and use L2-carrier data (default)
	-L2                  don't expect L2-carrier data
	+L1_2                keep L1 cycle data if L1 is squared (default)
	-L1_2                delete L1 cycle data if L1 is squared
	+L2_2                keep L2 cycle data if L2 is squared (default)
	-L2_2                delete L2 cycle data if L2 is squared
	+CA_L1               use phase/SNR/doppler values in C/A code block (e.g. C/A phase as RINEX L1) (default for TPS|JPS|SBF formats and Leica MDB 119)
	-CA_L1               use phase/SNR/doppler values in P1 code block (e.g. P1 phase as RINEX L1) (default except for TPS|JPS|SBF formats and Leica MDB 119)
	+L2C_L2              use phase/SNR/doppler values in L2C code block (e.g. L2C phase as RINEX L2)
	-L2C_L2              use phase/SNR/doppler values in P2 code block (e.g. P2 phase as RINEX L2) (default)
	+L5                  expect and use L5-carrier data
	-L5                  don't expect L5-carrier data (default)
	+L6                  expect and use L6-carrier data
	-L6                  don't expect L6-carrier data (default)
	+L7                  expect and use L7-carrier data
	-L7                  don't expect L7-carrier data (default)
	+L8                  expect and use L8-carrier data
	-L8                  don't expect L8-carrier data (default)
	-ToE_dt #            ToE lookback time from first observation epoch (default # = 2.0 hours)
	+msec_phs_adj        include ms adjustment to phase values at rx ms resets
	-msec_phs_adj        don't include ms adjustment to phase values at rx ms resets (default)
	+leap[_seconds]      subtract current leap seconds from GLONASS pseudoranges (default)
	-leap[_seconds]      no leap second adjustments to GLONASS pseudoranges
	+rssc                report site survey change(s) (default)
	-rssc                don't report site survey change(s)
	+rds                 reverse Doppler sign
	-rds                 keep current Doppler sign (default)
	+smooth[ing]         include smoothing correction to pseudoranges
	-smooth[ing]         don't include smoothing correction to pseudoranges (default)
	+force_dBHz          force dBHz interpretation of certain snr values (Ashtech, Trimble, ...)
	-force_dBHz          don't force dBHz interpretaion of snr values (default)
	+rx_clk_off[set]     include receiver clock offset to RINEX OBS and certain BINEX
	-rx_clk_off[set]     don't include receiver clock offset (default)
	+rx_ms_adj[ust]      correct data, if needed, for receiver millisecond resets during translation (default)
	-rx_ms_adj[ust]      do not correct data, i.e. it is correct as is
	-r[everse]           normal processor endianness on binary data output (default)
	+r[everse]           reverse processor endianness on binary data output (BINEX only for now)
	+Ashtech_qd          include all 'questionable' data when translating
	-Ashtech_qd          exclude all 'questionable' data (default)
	+Ashtech_B_file_adjust  Ashtech B-file is corrupted
	-Ashtech_B_file_adjust  normal Ashtech B-file (default)
	+Ashtech_old_clk_reset  use old Ashtech clock reset scheme
	-Ashtech_old_clk_reset  use modern Ashtech clock reset scheme (default)
	+lb2_fe              ignore Leica LB2 records until 0xfe record is read
	-lb2_fe              use all Leica LB2 records (default)
	+skip_init_LB2_03    skip initial Leica LB2 0x03 record
	-skip_init_LB2_03    use initial Leica LB2 0x03 record (default)
	-sbfobs #            specify Septentrio Binary Format observation record to use; # = 5889|5890|5944
	+geod_p              data from Trimble Geodesist-P receiver
	-geod_p              not from Geodesist-P (default)
	+TBnr                use 0x68 TurboBinary data (normal-rate observable record) (default)
	-TBnr                don't use 0x68 TurboBinary data
	+TBLC                use LC (0xde) TurboBinary data
	-TBLC                don't use LC (0xde) TurboBinar data (default)
	+TB1s                use 1-sec (0x1a) TurboBinary data)
	-TB1s                don't use 1-sec (0x1a) TurboBinary data (default)
	+TBhr                use high-rate (0xdb, 0xdc) TurboBinary data
	-TBhr                don't use high-rate (0xdb, 0xdc) TurboBinary data (default)
	+TBfe_ff             recognize header/trailer records (0xff, 0xfe) TurboBinary records (default)
	-TBfe_ff             ignore 0xff, 0xfe records
	+TB_ca_fix           apply CA offset fix to 0x68 TurboBinary records (before ~1 Dec 92)
	-TB_ca_fix           use modern (post-1 Dec 92( CA translation of 0x68 TurboBinary records (default)
	+v[erify]            verify conformance to input format standard to stdout
	-v[erify]            output RINEX standard or other (such as qc output) (default)
	+rx_state            output any receiver state parameters to stdout
	-rx_state            output RINEX standard or other (such as qc output) (default)
	-week #              set GPS week to initial value # for native format translation (default = best guess)
	+warn[ings]          dump any warnings to stderr (default)
	-warn[ings]          don't dump any warnings to stderr
	+notice[s]           dump any notices to stderr (default)
	-notice[s]           don't dump any notices to stderr
	+quiet               quiet stdout/stderr qc mode; automatically sets -warn[ings] and -notice[s]
	-quiet               normal stdout/stderr qc output (default)
	+meta[data]          produce UNAVCO archive raw metadata table
	-meta[data]          don't produce UNAVCO archive raw metadata table (default)
	+mds                 show short metadata summary
	-mds                 don't show short metadata summary (default)
	+mdf                 show probable format
	-mdf                 don't show probable format (default)
	+phc                 output all RINEX post-header comments (default)
	-phc                 suppress RINEX post-header comments
	-base[year] #        change epoch base year to # A.D. (default = 1980)
	-O.{header_option} to edit a specific RINEX OBS header field (see following)
		-O.sum[mary] s           for RINEX OBS file(s) and stdin not used as input, put summary in new RINEX OBS header (two passes)
		-O.sum[mary] e           for RINEX OBS file(s) as input, put summary at end RINEX OBS file (requires only one pass)
		-O.sum[mary] .           for native format or RINEX OBS as input, output summary to stdout (requires only one pass)
		-O.an 'str'              set RINEX OBS header antenna number to 'str'
		-O.at 'str'              set RINEX OBS header antenna type (and radome type) to 'str'
		-O.px[WGS84xyz,m] x y z  set RINEX OBS header antenna WGS 84 position to x y z (meters)
		-O.pg[eo,ddm] lat lon el set RINEX OBS header antenna WGS 84 position to lat lon elevation (deg deg meters)
		-O.pe[hEN,m] h E N       set RINEX OBS header antenna position eccentricities to h E N (meters)
		-O.mov[ing] 1            force RINEX OBS antenna position to be in kinematic (roving) state initially
		-O.ag[ency] 'str'        set RINEX OBS header operating agency to 'str'
		+O.c[omment] 'str'       append RINEX OBS header comment 'str'
		-O.dec[imate] #          modulo decimation of OBS epochs to # time units and sets RINEX OBS header interval value
	                                   # = 30s results in epochs nominally at 00 and 30 seconds
		-O.def_wf i j            set RINEX OBS header default wavelength factors to i and j
		-O.mod_wf i j n {SV1 SV2 ... SVn}  set RINEX OBS header modified wavelength factors to i and j of n SVs
		-O.e[nd] Y M D h m s     set RINEX OBS header end time (last epoch) to Y M D h m s
		-O.int[erval,sec] #      set RINEX OBS header observation interval to # ( > 0.) seconds; overridden by -O.dec[imate]
		-O.leap #                set RINEX OBS header leap seconds to #
		-O.mn 'str'              set RINEX OBS header monument number to 'str'
		-O.mo[nument] 'str'      set RINEX OBS header monument name to 'str'
		-O.o[perator] 'str'      set RINEX OBS header operator name to 'str'
		-O.rename_obs 'str'      rename RINEX OBS header observables to 'str'
	                                   'str' = L1L2C1P2 renames 4 observables to be L1 L2 C1 P2, and in that order
		-O.obs[_types] 'str'     change RINEX OBS header observables to 'str'
	                                   'str' = L1L2C1P2 sets 4 observables to be L1 L2 C1 P2, and in that order
		-O.-obs[_types] 'str'    exclude those RINEX OBS observables listed in 'str'
		-O.rn 'str'              set RINEX OBS header receiver number to 'str'
		-O.rt 'str'              set RINEX OBS header receiver type to 'str'
		-O.rv 'str'              set RINEX OBS header receiver firmware version to 'str'
		-O.r[un_by] 'str'        set RINEX OBS header run by to 'str'
		-O.s[ystem] #            set RINEX OBS header satellite system to # (= G, R, S, T, or M)
		-O.sl[ant] s d dh        set RINEX OBS header antenna position eccentricities to dh+sqrt(s^2 - (d/2)^2) 0 0 (meters)
		-O.st[art] Y M D h m s   set RINEX OBS header start time (first epoch) to Y M D h m s
	-N.{header_option} to edit a specific RINEX NAV header field (see following)
		-N.a[lpha] a0 a1 a2 a3   set RINEX NAV header ionosphere alpha parameters to a0 a1 a2 a3
		-N.b[eta] b0 b1 b2 b3    set RINEX NAV header ionosphere beta parameters to b0 b1 b2 b3
		+N.c[omment] 'str'       append RINEX NAV header comment 'str'
		-N.corr[_GLO] yr mon day secset RINEX GLONASS NAV correction to system time to yr mon day sec
		-N.corr_SBAS yr mon day sec set RINEX SBAS NAV correction to system time to yr mon day sec
		-N.dec[imate] #          modulo decimation of NAV ToE epochs to # time units
	                                   # = 12h results in ToE epochs at 00 and 12 hours
		-N.leap #                set RINEX NAV header leap seconds to #
		-N.r[un_by] 'str'        set RINEX NAV header run by to 'str'
		-N.s[ystem] #            set RINEX NAV header satellite system to # (= G, R, S)
		-N.UTC A0 A1 t w         set RINEX NAV header UTC time model to A0 A1 t w
	-M.{header_option} to edit a specific RINEX MET header field (see following)
		+M.c[omment] 'str'       append RINEX MET header comment 'str'
		-M.dec[imate] #          modulo decimation of MET epochs to # time units
	                                   # = 15m results in epochs at 00, 15, 30, and 45 minutes
		-M.int[erval,sec] #      set RINEX MET header observation interval to # ( > 0.) seconds
		-M.l[ast_epoch] <GPSweek>:<dow>:<sec>    set RINEX MET header last epoch to <GPSweek>:<dow>:<sec>
		-M.mn 'str'              set RINEX MET header monument number to 'str'
		-M.mo[nument] 'str'      set RINEX MET header monument name to 'str'
		+M.mod[el/type/acc] 'obs' 'model' 'type' accuracy  set 'obs' RINEX MET header sensor mod/type/acc to 'model' 'type' accuracy
	                                   'obs' = HR, PR, TD, or ZW
		-M.rename_obs 'str'      rename RINEX MET header observables to 'str'
	                                   'str' = TD+HR+PR renames 3 observables to be TD HR PR, and in that order
		-M.obs[_types] 'str'     change RINEX MET header observables to 'str'
	                                   'str' = TD+HR+PR sets 3 observables to be TD HR PR, and in that order
		-M.-obs[_types] 'str'    exclude those RINEX MET observables listed in 'str'
		+M.pos[ition] 'obs' x y z h  set 'obs' RINEX MET header sensor XYZ/H to x y z h
	                                   'obs' = HR, PR, TD, or ZW
		-M.r[un_by] 'str'        set RINEX MET header run by to 'str'
	-B.{0x00_option} to edit a specific BINEX 0x00 metadata field (see following)
		-B.c[omment] 'str'                 set 0x00 field ID 0x00 comment to 'str'
		-B.pr[ogram] 'str'                 set 0x00 field ID 0x01 program executable name to 'str'
		-B.p_o[perator] 'str'              set 0x00 field ID 0x02 program operator name to 'str'
		-B.si_l[ocation] 'str'             set 0x00 field ID 0x03 site location to 'str'
		-B.si[te] 'str'                    set 0x00 field ID 0x04 site name/description to 'str'
		-B.si_n[umber] 'str'               set 0x00 field ID 0x05 site number to 'str'
		-B.mo[nument] 'str'                set 0x00 field ID 0x06 monument name/description/inscription to 'str'
		-B.mo_n[umber] 'str'               set 0x00 field ID 0x07 monument number to 'str'
		-B.ma[rker] 'str'                  set 0x00 field ID 0x08 marker name/description/inscription to 'str'
		-B.ma_n[umber] 'str'               set 0x00 field ID 0x09 marker number to 'str'
		-B.r_p[oint] 'str'                 set 0x00 field ID 0x0a reference point name/description to 'str'
		-B.r_pn[umber] 'str'               set 0x00 field ID 0x0b reference point number (e.g. IERS DOMES) to 'str'
		-B.4_ch_ID 'code'                  set 0x00 field ID 0x0f 4-character ID to 'code'
		-B.proj[ect] 'str'                 set 0x00 field ID 0x10 project name to 'str'
		-B.PI 'str'                        set 0x00 field ID 0x11 principal investigator to 'str'
		-B.PI_i[nstitution] 'str'          set 0x00 field ID 0x12 PI's agency/institution to 'str'
		-B.PI_c[ontact_info] 'str'         set 0x00 field ID 0x13 PI's contact information to 'str'
		-B.SO 'str'                        set 0x00 field ID 0x14 site operator to 'str'
		-B.SO_i[nstitution] 'str'          set 0x00 field ID 0x15 site operator's agency/institution to 'str'
		-B.SO_c[ontact_info] 'str'         set 0x00 field ID 0x16 site operator's contact information to 'str'
		-B.at[ype] 'str'                   set 0x00 field ID 0x17 antenna type to 'str'
		-B.an[umber] 'str'                 set 0x00 field ID 0x18 antenna (serial) number to 'str'
		-B.rt[ype] 'str'                   set 0x00 field ID 0x19 receiver type to 'str'
		-B.rn[umber] 'str'                 set 0x00 field ID 0x1a receiver (serial) number to 'str'
		-B.rf[irmware] 'str'               set 0x00 field ID 0x1b receiver firmware version to 'str'
		-B.rdt[ype] 'str'                  set 0x00 field ID 0x20 radome type to 'str'
		-B.rdn[umber] 'str'                set 0x00 field ID 0x21 radome (serial) number to 'str'
		-B.am[ount] 'str'                  set 0x00 field ID 0x1c antenna mount description to 'str'
		-B.px[WGS84xyz,m] ['name'] x y z   set 0x00 field ID 0x1d antenna xyz position to x y z (meters)
	                                           (ellipsoid model name is optional; WGS-84 is assumed by default)
		-B.pg[eo,ddm] ['name'] lon lat el  set 0x00 field ID 0x1e antenna geographic position to lon lat elevation (deg deg meters)
	                                           (ellipsoid model name is optional; WGS-84 is assumed by default)
		-B.pe[hEN,m] h E N                 set 0x00 field ID 0x1f antenna offset from reference point to h E N (meters)
		-B.sl[ant] s d dh                  set 0x00 field ID 0x1f antenna offset from ref pt to dh+sqrt(s^2 - (d/2)^2) 0 0 (meters)
		-B.geocode 'str'                   set 0x00 field ID 0x22 geocode to 'str'
	-qc                  don't do quality check (default)
	+qc                  quality checking (w/ following options):
		-no_orb[it] <list>       don't use orbits for listed constellations (G,R,S,E,C,J) in qc, e.g. <list> = R+E
		-no_pos[ition] <list>    don't use orbits for listed constellations (G,R,S,E,C,J) in qc's ppp, e.g. <list> = R+E
		-orbit <i>:<w>[:[s][g]]  output orbit(s) where i= increment in seconds, w= window span in seconds
	                                 s = sidereal-fixed (default is Earth-fixed), g = geographical coordinates (default is XYZ)
		+ap                      turn average position on
		-ap                      don't do average position (default)
		+eep                     turn every epoch position (silent) on
		-eep                     don't do silent every epoch position (default)
		+eepx                    turn every epoch position (xyz cartesian)on
		-eepx                    don't do xyz every epoch position (default)
		+eepg                    turn every epoch position (geographical) on
		-eepg                    don't do geographical every epoch position (default)
		+cct                     report coarse code pseudorange observable totals (default)
		-cct                     report coarse code pseudorange subtotals (no precise code pseudorange)
		+cl[ock_slips]           turn clock n-msec slip detection on (default)
		-cl[ock_slips]           don't do clock n-msec slip detection
		-code_sigmas #           set maximum tolerace for code rejection to # (default = 2.0)
		+data[indicators]        turn data indicators on qc ASCII timeplot on (default)
		-data[indicators]        don't use data indicators on qc ASCII timeplot
		-eps[ilon] #             set machine epsilon to # (default = 1.387779e-17)
		+hor[izon]               when possible, show SV information down to horizon (default)
		-hor[izon]               show only observed SV information
		+ion                     compute L2-ionospheric observable (default)
		-ion                     don't compute L2-ionospheric observables
		+iod                     compute L2-ionospheric derivative (default)
		-iod                     don't compute L2-ionospheric derivative
		+tec                     compute TEC observable
		-tec                     don't compute TEC observables (default)
		-bins #                  use # elevation bins between horizon and zenith for all ion, mp, and sn observables (default = 18)
		-ion_bins #              use # elevation bins between horizon and zenith for ionospheric observable (default = 18)
		-ion_jump[cm] #          set maximum L2-ionospheric change to be # cm (default = 1.000e+35)
		-iod_jump[cm/min] #      set maximum L2-ionospheric time-rate of change to be # cm/minute (default = 400.0)
		-gap_mn[min] #           set minimum gap allowed # minutes (default = 10.0)
		-gap_mx[min] #           set maximum gap allowed w/o NAV info to # minutes (default = 90.0)
		+l[ong_report]           write a long report file segment (default)
		-l[ong_report]           don't write a long report file segment
		+lli                     turn Loss-of-Lock indicator on (default)
		-lli                     don't show Loss-of-Lock indicator
		+ma                      turn multipath moving average on (default)
		-ma                      don't use multipath moving average
		+mask                    when possible, show SV information down to elevation mask
		-mask                    show normal SV information (default)
		-min_L1 #                set minimum allowable L1 S/N RINEX code to 0 <= # <= 9 (default = 0)
		-min_L2 #                set minimum allowable L2 S/N RINEX code to 0 <= # <= 9 (default = 0)
		-min_L5 #                set minimum allowable L5 S/N RINEX code to 0 <= # <= 9 (default = 0)
		-min_SVs #               set minimum allowable SVs w/ 2 codes (per OBS epoch) to # for position attempt (default = 5)
		+mp                      compute L1 and L2 (and L5) multipath observables (default)
		-mp                      don't compute L1 and L2 (and L5) multipath observables
		-mp1_rms[cm] #           set expected MP1 rms to # cm (default = 50.00)
		-mp2_rms[cm] #           set expected MP2 rms to # cm (default = 65.00)
		-mp15_rms[cm] #          set expected MP15 rms to # cm (default = 50.00)
		-mp51_rms[cm] #          set expected MP51 rms to # cm (default = 65.00)
		-mp_bins #               use # elevation bins between horizon and zenith for mulitpath (default = 18)
		+mp_raw                  show raw multipath (no slip removal)
		-mp_raw                  show multipath (if being done) w/ slip removal (default)
		-mp_sigmas #             set minimum sigma threshold for mp slips to # sigmas (default = 4.0)
		-mp_win #                set multipath moving average window to # (< 65536) points (default = 50)
		-mp_CA_AS[%rms] #        set % increase of multipath rms to # if CA or AS present (default = 100.0)
		-msec_tol[msec] #        set millisecond clock slip tolerance to # msec (default = 1.00e-02)
		-nav[file(s)] list       forced input of RINEX NAV filename(s) in 'list' for ephemeris data (to perform position calculations)
	                                 where 'list' == any order, any number of GPS, GLONASS, Galileo, and/or QZSS RINEX NAV filenames delimeted by ','
	                                 (or use - or _ to omit a specific system)
		-p[ortrait][#[u]]        qc ASCII timeplot in 'portrait' mode; bin length in # units u (default u == m[inutes])
		-path_dt[min] #          set sampling of SV cubic spline fit to # minutes (default = 10)
		+pl                      compute L1 and L2 (and L5) pseudorange-phase observables
		-pl                      don't compute L1 and L2 (and L5) pseudorange-phase observables (default)
		+plot                    write 'compact' plot file(s) (default if GPS-only data)
		-plot                    don't write any 'compact' plot files
		+plot2                   write 'compact2' plot file(s) (default if GNSS data)
		-plot2                   don't write any 'compact2' plot files
		+pos[ition]              find antenna position and terminate teqc ASAP
		-pos[ition]              run teqc normally (default)
		-pos_conv[m] #           set position convergence to # ( > 0) meters (default = 1.000000e+00 m)
		-pos_jump[m] #           set position jump detection to # ( > 0) meters (default = 1.000000e+05 m)
		+rep[ort]                write a report file (default)
		-rep[ort]                don't write any report file
		+reset                   find antenna position and re-qc RINEX OBS file (default)
		-reset                   only one pass of each RINEX OBS file allowed (default if using stdin)
		-root str                supply filename root for ancillary files as str
		+rs                      compute rise and set times of each SV w/ NAV info (default)
		-rs                      don't compute rise and set times
		+s[hort_report]          write a short report file segment (default)
		-s[hort_report]          don't write a short report file segment
		-set_hor[izon,deg] #     set elevation horizon to # degrees (default = 0.00)
		-set_mask[deg] #         set elevation mask to # degrees (default = 10.00)
		-set_comp[arison,deg] #  set elevation comparison to # degrees (default = 25.00)
		-slips name              slip details written to file name
		+sn[ratio]               compute S/N observables (default)
		-sn[ratio]               don't compute S/N observables
		-sn_bins #               use # elevation bins between horizon and zenith for S/N (default = 18)
		+ssv                     give individual SUM lines for each SV
		-ssv                     no individual SUM lines for each SV (default)
		+sym[bol_codes]          dump symbol codes and hierarchy for short report qc ASCII timeplot
		-sym[bol_codes]          don't dump symbol codes and hierarchy (default)
		-w[idth] #               set time width of qc ASCII timeplot to 0 < # <= 255 (default = 72)
		+Y[-code]                Y-code receiver expected
		-Y[-code]                P-code receiver expected (possible tracking of P-codes w/ A/S on) (default)
		-qcq                     don't do quality check, quick or otherwise (default)
		+qcq                     do quality check w/ no 'compact' plot files or full report file unless explicitly specified
